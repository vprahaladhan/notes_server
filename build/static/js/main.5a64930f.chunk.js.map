{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","react_default","a","createElement","content","value","id","onClick","important","services_notes","axios","get","then","response","data","newObject","post","put","concat","App","props","_useState","useState","notes","_useState2","Object","slicedToArray","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","notesToShow","filter","useEffect","noteService","noteId","newNotes","toConsumableArray","find","n","map","components_Note","key","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","placeholder","onChange","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"wLAwBeA,EAtBF,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,iBAEpB,OAaEC,EAAAC,EAAAC,cAAA,UACGJ,EAAKK,QADR,WAEEH,EAAAC,EAAAC,cAAA,UAAQE,MAAON,EAAKO,GAAIC,QAASP,GAAjC,QAAyDD,EAAKS,UAAY,MAAQ,GAAlF,gCCHSC,EAZA,WACb,OAAOC,IAAMC,IAHC,cAGYC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAWvCL,EARA,SAAAM,GACb,OAAOL,IAAMM,KAPC,aAOaD,GAAWH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAOnDL,EAJA,SAACH,EAAIS,GAClB,OAAOL,IAAMO,IAAN,GAAAC,OAXO,aAWP,KAAAA,OAAwBZ,GAAMS,GAAWH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCuD7DK,EA/DH,SAACC,GAAU,IAAAC,EACKC,mBAASF,EAAMG,OADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACdE,EADcC,EAAA,GACPG,EADOH,EAAA,GAAAI,EAESN,mBAAS,IAFlBO,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEdE,EAFcD,EAAA,GAELE,EAFKF,EAAA,GAAAG,EAGSV,mBAAS,QAHlBW,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGdE,EAHcD,EAAA,GAGLE,EAHKF,EAAA,GAKfG,EAAcF,EAAUX,EAAQA,EAAMc,OAAO,SAAAtC,GAAI,OAAIA,EAAKS,YAMhE8B,oBAAU,WACNC,IAEG3B,KAAK,SAAAC,GAAQ,OAAIc,EAASd,MAC9B,IAEH,IAsBMb,EAAmB,SAACwC,GACxB,IAAMC,EAAQhB,OAAAiB,EAAA,EAAAjB,CAAOF,GACfxB,EAAO0C,EAASE,KAAK,SAAAC,GAAC,OAAIA,EAAEtC,KAAOkC,IACzCzC,EAAKS,WAAaT,EAAKS,UACvB+B,EACUxC,EAAKO,GAAIP,GAChBa,KAAK,SAAAC,GAAQ,OAAIc,EAASc,MAG/B,OACExC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UA5CeiC,EAAYS,IAC7B,SAAA9C,GAAI,OAAIE,EAAAC,EAAAC,cAAC2C,EAAD,CAAMC,IAAKhD,EAAKO,GAAIP,KAAMA,EAAMC,iBAAkB,kBAAMA,EAAiBD,EAAKO,UA8CpFL,EAAAC,EAAAC,cAAA,QAAM6C,SArCM,SAAAC,GACZA,EAAMC,iBACN,IAAMC,EAAa,CACjB/C,QAAS0B,EACTsB,KAAM,IAAIC,KACV7C,UAAW8C,KAAKC,SAAW,IAG7BhB,EACQY,GACPvC,KAAK,SAAAC,GACJc,EAASJ,EAAML,OAAOL,IACtBkB,EAAW,QA0BX9B,EAAAC,EAAAC,cAAA,SAAOqD,YAAY,iBAAiBnD,MAAOyB,EAAS2B,SAtB1C,SAACR,GAAD,OAAWlB,EAAWkB,EAAMS,OAAOrD,UAuB7CJ,EAAAC,EAAAC,cAAA,UAAQwD,KAAK,UAAb,QAAmC1D,EAAAC,EAAAC,cAAA,WACnCF,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,WAAWpD,QAtBH,SAAC0C,GACzBd,GAAYD,MAkBV,+BCtDNxB,IAAMC,IAAI,cAAcC,KAAK,SAAAC,GAC3B+C,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,CAAKvC,MAAOV,EAASC,OAAUiD,SAASC,eAAe","file":"static/js/main.5a64930f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n\n  return (\n    // <table key={note.id}>  \n    //   <tbody key={note.id}>\n    //       <tr key={note.id}>\n    //         <td style={{width: '75%'}}>{note.content}</td> \n    //         <td style={{width: '25%'}}>\n    //           <button value={note.id} onClick={toggleImportance}>\n    //             Make {note.important ? \"not\" : \"\"} important\n    //           </button>\n    //         </td>\n    //       </tr>\n    //     </tbody>\n    //   </table>\n    <li>\n      {note.content}&nbsp;&nbsp;\n      <button value={note.id} onClick={toggleImportance}>Make {note.important ? \"not\" : \"\"} important</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update \r\n}","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport axios from 'axios'\nimport noteService from './services/notes'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState('true')\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const rows = () => notesToShow.map(\n    note => <Note key={note.id} note={note} toggleImportance={() => toggleImportance(note.id)} />\n    )\n\n  useEffect(() => {\n      noteService\n        .getAll()\n        .then(response => setNotes(response))\n  }, [])\n\n  const addNote = event => {\n      event.preventDefault()\n      const noteObject = {\n        content: newNote,\n        date: new Date(),\n        important: Math.random() > 0.5,\n      }\n    \n      noteService\n      .create(noteObject)\n      .then(response => {\n        setNotes(notes.concat(response))\n        setNewNote('')\n      })\n  }\n  \n  const setNote = (event) => setNewNote(event.target.value)\n\n  const showImportantOnly = (event) => {\n    setShowAll(!showAll)\n  }\n \n  const toggleImportance = (noteId) => {\n    const newNotes = [...notes]\n    const note = newNotes.find(n => n.id === noteId)\n    note.important = !note.important\n    noteService\n      .update(note.id, note)\n      .then(response => setNotes(newNotes))\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input placeholder=\"Type new notes\" value={newNote} onChange={setNote}/>\n        <button type=\"submit\">save</button><br/>\n        <input type=\"checkbox\" onClick={showImportantOnly}/>Show important notes only\n      </form>\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'  // highlight-line\nimport axios from 'axios'\n\naxios.get('/api/notes').then(response => {\n  ReactDOM.render(<App notes={response.data} />, document.getElementById('root'))\n})\n// console.log(notes)\n\n// const notes = [\n//   {\n//     id: 1,\n//     content: 'HTML is easy',\n//     date: '2019-05-30T17:30:31.098Z',\n//     important: true\n//   },\n  //   {\n//     id: 2,\n//     content: 'Browser can execute only Javascript',\n//     date: '2019-05-30T18:39:34.091Z',\n//     important: false\n//   },\n//   {\n//     id: 3,\n//     content: 'GET and POST are the most important methods of HTTP protocol',\n//     date: '2019-05-30T19:20:14.298Z',\n//     important: true\n//   }\n// ]\n\n// ReactDOM.render(<App notes={notes} />, document.getElementById('root'))"],"sourceRoot":""}